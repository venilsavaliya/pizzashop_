@model DAL.ViewModels.OrderAppMenuMainViewModel;

@{
    Layout = "~/Views/Shared/_OrderAppLayout.cshtml";
    ViewData["Title"] = "Menu";
    int index = 0;
    decimal subtotal = 0;
    decimal total = 0;
    int orderid = ViewBag.orderid;
}

<div class="p-0">

    <div class="d-flex flex-column bg-white position-fixed d-none d-lg-block"
        style="width: 250px;font-weight: 600;height: 92.5vh;" id="category_list">

        <!--pv of category list -->
    </div>

    <div class="main-container p-3 " style="margin-left: 250px;" id="OrderAppMenuContainer">

        <div class="d-flex flex-column flex-md-row gap-3 justify-content-between mb-3 ">
            <div class="d-flex justify-content-between">
                <div data-bs-toggle="offcanvas" data-bs-target="#CategoryOffcanvas"
                    class="custom-btn-bg px-2 text-center align-middle rounded d-md-none">
                    <i class="bi bi-list fs-2 text-white fw-bold "></i>
                </div>

                <div class="position-relative " style="width: 280px;">
                    <input type="text" class="p-2 w-100 " placeholder="Search" id="menuitem-search-field">
                    <img src="~/images/icons/search.svg" alt="" class="searchicon-img">
                </div>
            </div>
            <div class=" d-flex justify-content-start justify-content-md-end align-items-center gap-3">
                <div class="d-flex gap-2 align-items-center">
                    <span style="color: var(--veg)"><i class="bi bi-circle-fill"></i></span>
                    <span>Vegetarian</span>
                </div>
                <div class="d-flex gap-2 align-items-center">
                    <span class="" style="color: var(--nonveg)"><i class="bi bi-circle-fill"></i></span>
                    <span>Non-Vegetarian</span>
                </div>

            </div>
        </div>

        <div class=" row">
            <div id="menuitems_card"
                class="d-flex gap-3 flex-wrap @(Model.OrderId != 0 ? "col-xl-7 col-lg-5" : "") overflow-auto invisible-scrollbar mb-3 mb-lg-0"
                style="max-height: 82vh; height:fit-content">
                @* pv of menuitems *@
            </div>
            @if (Model.OrderId != 0)
            {
                <div class="orderTakingMenu col-xl-5 col-lg-7 bg-white p-4">

                    <div class="first-section d-flex justify-content-between">
                        <div class="first d-flex align-items-center gap-2">
                            <div class="p-1" style="background-color: rgb(215, 223, 250);"><img
                                    src="~/images/icons/diningtable.png" height="30" alt=""></div>
                            <div class="d-flex flex-column">
                                <div>@Model.SectionName</div>
                                <div> <span class="fw-bolder">Tables: </span>@foreach(var i in Model.TableList)
                                    {
                                        <span>@i.Name </span>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="second d-flex gap-3 align-items-center">
                            <div class="custom-blue-border orderTakingMenuIcon rounded" data-bs-toggle="modal"
                                data-bs-target="#QrCodeModal"><i class="bi bi-qr-code-scan custom-blue fs-4"></i></div>
                            <div class="custom-blue-border orderTakingMenuIcon rounded" id="CustomerDetailButton"
                                order-id="@Model.OrderId">
                                <i class="bi bi-person-lines-fill fs-4 custom-blue"></i>
                            </div>
                            <div class="custom-blue-border orderTakingMenuIcon rounded InstructionBtn"
                                order-id="@Model.OrderId"><i class="bi bi-chat-left-text fs-4 custom-blue"></i></div>
                        </div>
                    </div>

                    <div class="second-section overflow-auto" style="height: 400px;">
                        <div class="table-responsive ">
                            <table class="table table-borderless" id="OrderTable">
                                <thead>

                                    <tr>
                                        <th style="width: 400px;">Items</th>
                                        <th style="width: 100px;">Quantity</th>
                                        <th style="width: 100px;">Amount</th>
                                        <th></th>
                                    </tr>

                                </thead>
                                <tbody id="MenuOrderItemTable">

                                </tbody>
                            </table>

                        </div>
                    </div>

                    <hr>

                    <div class="third-section">
                        <div class="d-flex w-100 align-ites-center justify-content-between">
                            <span class="fs-5" style="font-weight: 500;">Sub Total</span>
                            <span id="subTotal">₹ 0.00</span>
                        </div>
                        @foreach (var i in Model.TaxList)
                        {
                            if (!i.Isdefault)
                            {
                                <div class="d-flex w-100 align-ites-center justify-content-between">
                                    <div class="form-check">
                                        <input class="form-check-input tax-checkbox" type="checkbox" data-taxid="@i.TaxId"
                                            id="check_@i.TaxId">
                                        <label class="form-check-label" for="check_@i.TaxId">
                                            @i.TaxName
                                        </label>
                                    </div>
                                    <span class="tax-value" data-taxid="@i.TaxId">₹ 0.00</span>
                                </div>
                            }
                            else
                            {
                                <div class="d-flex w-100 align-ites-center justify-content-between">
                                    <span>@i.TaxName</span>
                                    <span class="tax-value" data-taxid="@i.TaxId">₹ @(i.Type == "Percentage" ? (subtotal *
                                                                    i.TaxAmount)
                                                                    / 100 : i.TaxAmount)</span>
                        @{
                                        if (i.Type == "Percentage")
                                        {
                                            total += (subtotal * i.TaxAmount) / 100;
                                        }
                                        else
                                        {
                                            total += i.TaxAmount;
                                        }
                                    }
                                </div>
                            }
                        }


                        <div class="d-flex w-100 align-ites-center justify-content-between">
                            <span class="">Other Tax</span>
                            <span id="otherTaxAmount">₹ 0.00</span>
                        </div>
                        <div class="d-flex w-100 align-ites-center justify-content-between">
                            <span class="fs-5" style="font-weight: 500;">Total</span>
                            <span id="grandTotal">₹ 0.00</span>
                        </div>
                        <div class="d-flex w-100 align-items-center justify-content-between">
                            <span class="fs-6" style="font-weight: 500;">Payment Method</span>
                            <span class="d-flex gap-2">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="radioDefault" id="radioCash"
                                        value="Cash">
                                    <label class="form-check-label" for="radioCash">
                                        Cash
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="radioDefault" id="radioCard"
                                        value="Card">
                                    <label class="form-check-label" for="radioCard">
                                        Card
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="radioDefault" id="radioUPI"
                                        value="UPI">
                                    <label class="form-check-label" for="radioUPI">
                                        UPI
                                    </label>
                                </div>
                            </span>
                        </div>
                    </div>

                    <div class="fourth-section d-flex flex-column gap-2 mt-3">
                        <div class=" d-flex flex-wrap justify-content-end gap-2">

                            <div class="d-flex flex-wrap gap-2 ">
                                <button
                                    class="custom-btn-bg text-white p-2 border rounded @(Model.OrderStatus == "Pending" || Model.OrderStatus == "Completed" ? "disabled-button" : "")"
                                    style="min-width: 200px;" onclick="SaveOrder()" id="SaveOrderBtn">
                                    Save</button>

                                <button
                                    class="bg-white custom-blue-border rounded p-2 custom-blue @(Model.OrderStatus == "Pending" || Model.OrderStatus != "Served" || Model.OrderStatus == "Completed" ? "disabled-button" : "")"
                                    type="reset" style="min-width: 200px;" id="CompleteBtn"
                                    onclick="openCompleteOrderModal()">Complete</button>

                            </div>

                            <div class="d-flex flex-wrap gap-2">
                                <a class="text-black @(Model.OrderStatus != "Completed" ? "disabled-button" : "")"
                                    asp-controller="Order" asp-action="ExportToPdf" asp-route-id=@Model.OrderId
                                    id="GenerateInvoiceBtnLink"><button
                                        class="bg-white custom-blue-border rounded p-2 custom-blue " type="reset"
                                        style="min-width: 200px;" id="GenerateInvoiceBtn">Generate
                                        Invoice</button></a>

                                <div class="d-flex justify-content-end">
                                    <button
                                        class="bg-white custom-blue-border rounded p-2 custom-blue @(Model.OrderStatus == "Completed" ? "disabled-button" : "")"
                                        id="CancelOrderBtn" type="reset" style="min-width: 200px;" data-bs-toggle="modal"
                                        data-bs-target="#CancelOrderModal">Cancel</button>
                                </div>
                            </div>


                        </div>

                    </div>

                </div>

            }
            </>

        </div>
    </div>




@* ===== modal ======= *@

    <div class="modal fade" id="QrCodeModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Menu</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex justify-content-center">
                    <img src="~/images/qrcode.jpg" alt="" height="200">
                </div>
                <div class="modal-footer d-flex justify-content-center">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Done</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade z-3" id="selectmodifieritemmodal" tabindex="-1" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content" id="selectmodifieritemmodalContent">


            </div>
        </div>
    </div>


    <div class="modal fade" id="CustomerDetailModal" tabindex="-1" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content" id="customerDetailModalContent">
                @* Partial View For Edit Customer Detail  *@
            </div>
        </div>
    </div>

    <div class="modal fade" id="InstructionsModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content" id="InstructionModalContent">
                @* Partial View For Edit Customer Detail  *@
            </div>
        </div>
    </div>


@* Complete Order Confirmation Modal *@

    <div class="modal" tabindex="-1" id="CompleteOrderModal">
        <div class="modal-dialog modal-dialog-centered modal-auto">
            <div class="modal-content p-3 m-auto">

                <div class="modal-body">
                    <div class="d-flex justify-content-center"><img src="~/images/warning.png" alt="" width="40">
                    </div>
                    <div class="d-flex justify-content-center mt-3">Are You Sure You Want To Complete This Order?</div>
                </div>
                <div class="d-flex justify-content-center align-items-center gap-2">
                    <button type="button" onclick="CompleteOrder()" class="btn btn-primary px-4">Yes</button>
                    <button type="button" class="btn btn-secondary px-4" data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

@* cancel Order Confirmation Modal *@

    <div class="modal" tabindex="-1" id="CancelOrderModal">
        <div class="modal-dialog modal-dialog-centered modal-auto">
            <div class="modal-content p-3 m-auto">

                <div class="modal-body">
                    <div class="d-flex justify-content-center"><img src="~/images/warning.png" alt="" width="40">
                    </div>
                    <div class="d-flex justify-content-center mt-3">Are You Sure You Want To Cancel This Order?</div>
                </div>
                <div class="d-flex justify-content-center align-items-center gap-2">
                    <button type="button" onclick="CancelOrder()" class="btn btn-primary px-4">Yes</button>
                    <button type="button" class="btn btn-secondary px-4" data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <!--Customer Review Modal -->
    <div class="modal fade " id="CustomerReviewModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered ">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Customer Review
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="px-1 ratingContent">
                        <div class="d-flex justify-content-between ratingTitle">
                            <div>Food</div>
                            <div class="d-flex gap-2" data-type="FoodRating">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <span class="star" data-index="@i"><i class="bi bi-star text-secondary"></i></span>
                                }
                            </div>
                        </div>
                        <div class="d-flex justify-content-between ratingTitle">
                            <div>Service</div>
                            <div class="d-flex gap-2" data-type="ServiceRating">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <span class="star" data-index="@i"><i class="bi bi-star text-secondary"></i></span>
                                }
                            </div>
                        </div>
                        <div class="d-flex justify-content-between ratingTitle">
                            <div>Ambience</div>
                            <div class="d-flex gap-2" data-type="AmbienceRating">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <span class="star" data-index="@i"><i class="bi bi-star text-secondary"></i></span>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="form-floating w-100 mt-2">
                        <textarea id="OrderComment" class="form-control" placeholder="Leave a comment here"
                            style="height: 100px"></textarea>
                        <label for="floatingTextarea2">Comments</label>
                    </div>
                </div>
                <div class="modal-footer justify-content-end">
                    <button type="button" class="btn savebtn" onclick="SaveCustomerReview(@Model.OrderId)">Save</button>
                    <button type="button" class="btn cancelbtn" data-bs-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div class="offcanvas offcanvas-start" tabindex="-1" id="CategoryOffcanvas" aria-labelledby="offcanvasExampleLabel"
        style="width: 300px;">
        <div class="offcanvas-header align-items-center">
            <div class="sidebar-option">
                <a href="./superadmindashboard.html" class="sidebar-link">
                    <div class=" d-flex  justify-content-start align-items-center gap-3 mt-2">
                        <img src="~/images/logos/pizzashop_logo.png" alt="" class="w-25">
                        <h3 class="custom-skyblue">Category</h3>
                    </div>
                </a>
            </div>

            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">


        </div>
    </div>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/OrderAppMenu/OrderAppMenu.js"></script>

    <script>

        var index = 0;
        var TaxList = @Html.Raw(Json.Serialize(Model.TaxList))


            $(document).ready(function () {
                var orderItems = @Html.Raw(Json.Serialize(Model.OrderItems));

                // for getting existing order items
                SetOrderItemList(orderItems);
                @* for (let i of orderItems) {

                    TempOrderItemList.push({
                        Index: index,
                        ItemId: i.itemId,
                        DishId: i.dishId,
                        ItemName: i.itemName,
                        Rate: i.rate,
                        Quantity: i.quantity,
                        TaxPercentage: i.taxPercentage,
                        ItemComment: i.itemComment,
                        ModifierItems: i.modifierItems,
                    });
                    index++;
                } *@

                    // event listener on every tax checkbox to recaculate tax
                    $(".tax-checkbox").on("change", function () {
                        calculateAllTaxes(TaxList, TempOrderItemList);
                    });

                //calculate Tax For the First Time
                calculateAllTaxes(TaxList, TempOrderItemList)

                //adding order Item For First Time
                appendOrderItemPartialView();

            });

        // handle add order
        function handleAddOrder(ele) {
            var alldata = $(ele).data("obj");

            const modifierItems = Array.from(selectedModifierItems).map(
                (item) => item.modifierItem
            );

            for (i of alldata.modifierGroups) {
                console.log(i.modifiergroupId);
                if (
                    Array.from(selectedModifierItems).filter(
                        (j) => j.modifierGroupId == i.modifiergroupId
                    ) < i.minValue
                ) {
                    toastr.warning("Select Minimum Number Of Modifier!");
                    return;
                }
            }

            const existing = TempOrderItemList.find(x =>
                x.ItemId === alldata.itemId &&
                JSON.stringify([...x.ModifierItems].sort) === JSON.stringify([...modifierItems.flat()].sort)
            );

            if (existing) {
                increaseQuantity(existing.Index);

                var modal = bootstrap.Modal.getInstance($("#selectmodifieritemmodal"));
                modal.hide();
                
            } else {

                TempOrderItemList.push({
                    Index: index,
                    ItemId: alldata.itemId,
                    ItemName: alldata.itemName,
                    DishId: alldata.DishId,
                    Rate: alldata.rate,
                    Quantity: 1,
                    TaxPercentage: alldata.taxPercentage,
                    ItemComment: "",
                    ModifierItems: modifierItems.flat(),
                });
                index++;

                // This wil ensure that if there is one item than no item message is not visible
                if (TempOrderItemList.length != 0) {
                    $("#noItemSpan").remove();
                }

                $.ajax({
                    type: "Post",
                    url: "/OrderAppMenu/GetMenuOrderItemPartialView",
                    data: {
                        ...TempOrderItemList[TempOrderItemList.length - 1]
                    },
                    success: function (data) {
                        $("#MenuOrderItemTable").append(data);
                        var modal = bootstrap.Modal.getInstance($("#selectmodifieritemmodal"));

                        modal.hide();

                        //Re-calculate Tax For added Item
                        calculateAllTaxes(TaxList, TempOrderItemList)

                    },
                });
            }

            $("#SaveOrderBtn").removeClass("disabled-button");
            $("#CompleteBtn").removeClass("disabled-button");

        }

        // handle open review modal

        function openReviewModal() {
            var modal = new bootstrap.Modal(document.getElementById("CustomerReviewModal"));
            modal.show();
        }

        $(document).on('click', '.star', function () {
            var ratingType = $(this).parent().data('type'); // FoodRating / ServiceRating / AmbienceRating
            var index = $(this).data('index'); // 1 to 5

            console.log("hello", index)

            // Store the rating in parent div
            $(this).parent().attr('data-rating', index);

            // Reset all stars first
            $(this).parent().find('.star i')
                .removeClass('bi-star-fill text-warning')
                .addClass('bi-star text-secondary');

            // Highlight selected stars
            $(this).prevAll().find('i')
                .removeClass('bi-star text-secondary')
                .addClass('bi-star-fill text-warning');

            $(this).find('i')
                .removeClass('bi-star text-secondary')
                .addClass('bi-star-fill text-warning');
        });

        // Save button click
        function SaveCustomerReview(orderId) {

            var foodRating = $('[data-type="FoodRating"]').attr('data-rating') || 0;
            var serviceRating = $('[data-type="ServiceRating"]').attr('data-rating') || 0;
            var ambienceRating = $('[data-type="AmbienceRating"]').attr('data-rating') || 0;
            var comment = $('#OrderComment').val();

            if (foodRating == 0 || serviceRating == 0 || ambienceRating == 0) {
                toastr.error("Please give ratings for all sections.");
                return;
            }

            var model = {
                OrderId: @Model.OrderId,
                FoodRating: foodRating,
                ServiceRating: serviceRating,
                AmbienceRating: ambienceRating,
                Comments: comment
            };

            $.ajax({
                url: '/OrderAppMenu/OrderReview',
                type: 'POST',
                data: model,
                success: function (response) {
                    if (response.success) {

                        $('#CustomerReviewModal').modal('hide');

                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function (error) {
                    console.error('Error submitting review:', error);
                    toastr.error('Something went wrong.');
                }
            });
        }



        //handle save order
        function SaveOrder() {

            var SaveOrder = JSON.stringify({
                OrderId:@Model.OrderId,
                OrderInstruction: "",
                OrderItems: TempOrderItemList,
                TaxList: TempTaxList,
                TotalAmount: $("#grandTotal").text().replace("₹", "").trim(),
            });

            $.ajax({
                type: "Post",
                url: "/OrderAppMenu/SaveOrder",
                data: {
                    model: SaveOrder
                },
                success: function (response) {
                    if (response.success) {

                        toastr.success(response.message);
                        GetOrderItemList(@Model.OrderId);
                    }
                    else {
                        toastr.error(response.message);
                    }
                }
            })

        }

        async function openCompleteOrderModal() {
            var orderStatus = await $.ajax({
                type: "GET",
                url: "/OrderAppMenu/GetOrderStatus",
                data: {
                    orderid: @Model.OrderId
                }
            })

            console.log(orderStatus)
            if (orderStatus == "Completed") {
                toastr.warning("Order is Already Completed!");
                return;
            }
            if (orderStatus != "Served") {
                toastr.warning("Order is Not Served Yet!");
                return;
            }


            var modal = new bootstrap.Modal(document.getElementById("CompleteOrderModal"));
            modal.show();

        }


        //handle Complete Order
        function CompleteOrder() {

            const selectedPayment = document.querySelector('input[name="radioDefault"]:checked');
            if (!selectedPayment) {
                toastr.warning("Please Select A Payment Method!");
                return;
            }

            var completeOrder = JSON.stringify({
                OrderId:@Model.OrderId,
                TaxList: TempTaxList,
                TotalAmount: $("#grandTotal").text().replace("₹", "").trim(),
                PaymentMode: selectedPayment.value
            });

            $.ajax({
                type: "Post",
                url: "/OrderAppMenu/CompleteOrder",
                data: {
                    model: completeOrder
                },
                success: function (response) {
                    if (response.success) {

                        toastr.success(response.message);
                        GetOrderItemList(@Model.OrderId);

                        $.ajax({
                            type: "GET",
                            url: "/OrderAppMenu/GetOrderStatus",
                            data: {
                                orderId:@Model.OrderId
                            },
                            success: function (status) {

                                var modal = bootstrap.Modal.getInstance($("#CompleteOrderModal"))
                                modal.hide();

                                var modal = new bootstrap.Modal($("#CustomerReviewModal"));
                                modal.show();

                                $("#GenerateInvoiceBtn").removeClass("disabled-button");
                                $("#GenerateInvoiceBtnLink").removeClass("disabled-button");
                                $("#SaveOrderBtn").addClass("disabled-button");
                                $("#CompleteBtn").addClass("disabled-button");
                                $("#CancelOrderBtn").addClass("disabled-button");


                            }
                        })
                    }
                    else {
                        toastr.error(response.message);
                    }
                }
            })


        }


        //handle Cancel Order 

        function CancelOrder() {



            $.ajax({
                type: "Post",
                url: "/OrderAppMenu/CancelOrder",
                data: {
                    orderId:@Model.OrderId
                },
                success: function (response) {
                    if (response.success) {
                        @* toastr.success(response.message); *@
                            window.location.href = "/OrderAppTable/Index";
                    }
                    else {
                        toastr.error(response.message);
                    }
                }
            })
        }
    </script>