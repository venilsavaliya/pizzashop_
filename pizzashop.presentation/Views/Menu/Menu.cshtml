@* @model IEnumerable<DAL.ViewModels.CategoryNameViewModel> *@
@model DAL.ViewModels.MenuViewModel;

<div class="Menu-container p-3">

    <h3 class="custom-blue">Menu</h3>


    <div class="switching-tabs-section d-flex justify-content-start gap-4 bg-white px-3 nav
                " role="tablist">

        <div class="d-flex justify-content-center gap-2 nav-link active p-3" id="nav-home-tab" data-bs-toggle="tab"
            data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">
            <div><img src="~/images/icons/list-check.svg" alt="" class="small-img"></div>
            <div>Items</div>
        </div>
        <div class="d-flex justify-content-center gap-2 nav-link p-3" id="nav-profile-tab" data-bs-toggle="tab"
            data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">
            <div><img src="~/images/sidebar icons/dashboard.png" alt="" class="small-img"></div>
  
            <div class="">Modifiers</div>
        </div>


    </div>

    <div class="CategoryForSmallScreen d-lg-none bg-white mt-2 p-2 ">

       
        <div class="d-flex justify-content-between align-items-center p-1">
            <h5 class="custom-blue">Category</h5>
            <div class="custom-blue-border custom-blue px-2 rounded" style="font-size: 20px;" data-bs-toggle="modal"
                data-bs-target="#staticBackdrop">+
            </div>
        </div>
        <div class="d-flex flex-column p-2 gap-4 fw-medium overflow-auto h-100">
             @foreach(var c in Model.Categories){
            <div class="category-option-smallscreen d-flex justify-content-start align-items-center gap-2 ">
                <img src="~/images/icons/grid-3x2-gap-fill.svg" alt="" class="category-option-img">
                <div>@c.Name</div>
            </div>
        }
            
        </div>
    </div>


    <div class="tab-content bg-white mt-2 bg-white position-relative " id="nav-tabContent">
        <div class="tab-pane fade show active w-100" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab"
            tabindex="0">
            <div class="d-flex w-100">
                <div class=" category-menu border-0 pt-3 d-none d-lg-block">
                    <div class="d-flex justify-content-between align-items-center p-1">
                        <h5 class="custom-blue">Category</h5>
                        <div class="custom-blue-border custom-blue px-2 rounded" style="font-size: 20px;"
                            data-bs-toggle="modal" data-bs-target="#staticBackdrop">+
                        </div>
                    </div>
                    <div class="d-flex flex-column p-2 mt-5 gap-4 fw-medium overflow-auto h-75">

                        @foreach (var c in Model.Categories)
                        {
                            <div
                                class="category-option d-flex justify-content-between align-items-center gap-2 @(Model.SelectedCategory == c.Name?"category-active-option":"")" id="category_option"  >
                                <div class="d-flex gap-2" style="cursor: pointer;" onclick="loaditems(this)" category-name="@c.Name">
                                    <img src="~/images/icons/grid-3x2-gap-fill.svg" alt="" class="category-option-img ">
                                    <div>@c.Name</div>
                                </div>
                               
                                <div class="d-flex justify-content-between gap-3 d-none" id="categoryoption_actionbtn">
                                    @* <a asp-action="Edit" asp-controller="Menu" asp-route-id="@c.Id"> *@
                                        <img src="~/images/icons/pen.svg" alt="" data-bs-toggle="modal" data-bs-target="#editcategory" onclick="setEditData(this)" data-id="@c.Id" data-name="@c.Name" data-description="@c.Description" obj="@c">
                                        @* </a> *@
                                    <img src="~/images/icons/trash.svg" data-bs-toggle="modal"
                                        data-bs-target="#deletecategorymodal" onclick="setDeleteUserId(this)" data-id="@c.Id"
                                        alt="">
                                </div>
                            </div>
                        }

                    </div>

                </div>
                <div class="d-flex flex-column flex-grow-1 pt-3 px-3 w-100 ">
                    <div class="d-flex justify-content-between">
                        <h5 class="custom-blue">Items</h5>


                    </div>
                    <div
                        class="search-delete-section d-flex justify-content-start justify-content-md-end align-items-center">
                        <div class="search-section d-flex gap-2 ">
                            <div class="position-relative" style="width: 180px;">
                                <input type="text" class="p-2 w-100" placeholder="Search" id="search-field">
                                <img src="~/images/icons/search.svg" alt="" class="searchicon-img">
                            </div>
                            <div class="d-flex justify-content-center align-items-center w-auto border rounded px-3">
                                <img src="~/images/icons/trash.svg" alt="" srcset="" style="width: 20px;"
                                    class="small-img">
                            </div>
                            <button type="button" class=" custom-btn-bg text-white p-2 border d-none d-md-block"><span
                                    class="fs-5 fw-semibold">+</span> New
                                Item</button>
                            <button type="button"
                                class=" custom-btn-bg text-white px-3 border fs-5 fw-bold d-md-none">+</button>
                        </div>
                    </div>
                    <div class="table-section bg-white table-responsive mt-5 ms-2 me-2">
                        <table class="table">
                            <tr>
                                <th class="d-flex">
                                    <div class="form-check">
                                        <input class="form-check-input outer_checkbox" id="menu-main-checkbox"
                                            type="checkbox" value="" id="flexCheckIndeterminate">
                                    </div> <span>Name</span>
                                </th>
                                <th>ItemType</th>
                                <th>Rate</th>
                                <th>Quantity</th>
                                <th>Available</th>
                                <th>Action</th>
                            </tr>
                            @foreach(var i in Model.Itemsmodel.Items)
                            {

                                 <tr>
                                <td>
                                    <div class="d-flex justify-content-start gap-2 align-items-center">
                                        <div class="form-check">
                                            <input class="form-check-input inner_checkbox" type="checkbox" value=""
                                                id="flexCheckIndeterminate">
                                        </div>
                                        <img src="~/images/dining-menu.png" class="small-img">
                                        <span>@i.ItemName</span>
                                    </div>
                                </td>
                                <td>
                                    @if(i.Type=="Veg"){
                                        <img src="~/images/icons/veg-icon.svg" alt="" class="small-img ">
                                    }else{

                                    <img src="~/images/icons/non-veg-icon.svg" alt="" class="small-img ">
                                    }
                                </td>
                                <td>@i.Rate</td>
                                <td>@i.Quantity</td>
                                <td>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input toggle-btn" type="checkbox" role="switch"
                                            id="flexSwitchCheckDefault">
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex justify-content-start gap-5">
                                        <img src="~/images/icons/pen.svg" alt="">
                                        <img src="~/images/icons/trash.svg" data-bs-toggle="modal"
                                            data-bs-target="#exampleModal" alt="">
                                    </div>

                                </td>
                            </tr>

                            }
                            

                        </table>
                        <div class="pagination-section d-flex justify-content-end align-items-center gap-2 overflow-auto w-100">
            <div class="d-flex justify-content-md-end align-items-center gap-2 w-100">
                <div>Items per page: </div>
                <select class="form-select" style="width:68px ;" aria-label="Default select example"
                    id="pageSizeDropdown" onchange="changePageSize()">
                    <option selected>@Model.Itemsmodel.PageSize</option>
                    <option value="3">3</option>
                    <option value="5">5</option>
                    <option value="10">10</option>
                </select>
                <div>Showing @Model.Itemsmodel.StartIndex - @Model.Itemsmodel.EndIndex of @Model.Itemsmodel.TotalCount</div>
                @if (Model.Itemsmodel.CurrentPage > 1)
                {
                    <a href="@Url.Action("Menu", new { pageNumber = Model.Itemsmodel.CurrentPage - 1, pageSize = Model.Itemsmodel.PageSize, SearchKeyword = Model.Itemsmodel.SearchKeyword })"
                        class="text-black" style="text-decoration: none;">
                        <div class="border p-2 px-3"> &lt; </div>
                    </a>
                }
                @if (Model.Itemsmodel.CurrentPage < Model.Itemsmodel.TotalPages)
                {
                    <a href="@Url.Action("Menu", new { pageNumber = Model.Itemsmodel.CurrentPage + 1, pageSize = Model.Itemsmodel.PageSize, SearchKeyword = Model.Itemsmodel.SearchKeyword })"
                        class="text-black" style="text-decoration: none;">
                        <div class="border p-2 px-3">&gt;</div>
                    </a>
                }
            </div>
                        </div>
                    </div>

                </div>

            </div>


@* -----------second tab------------ *@
            <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab" tabindex="0">
                <div>
                    helllo
                </div>
            </div>


        </div>

    </div>


   

   

    <!-- add category modal -->
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Add Category</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="Menu" asp-controller="Menu" method="post">
                    <div class="modal-body">
                        <div class="d-flex flex-column">

                            <div class="mb-3">

                                <input type="text" class="form-control p-3" id="exampleFormControlInput1" name="Name"
                                    placeholder="Name">
                            </div>
                            <div class="mb-3">

                                <textarea class="form-control" id="exampleFormControlTextarea1" rows="3"
                                    placeholder="Description" name="Description"></textarea>
                            </div>
                        </div>
                         <div class="d-flex justify-content-end gap-2 p-2">
                            <button type="submit" class="btn custom-btn-bg text-white fw-medium">Save</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                         </div>
                    </div>

                    

                </form>
            </div>
        </div>
    </div>


      @* ---------------- Delete category modal body------------------- *@

    <div class="modal" tabindex="-1" id="deletecategorymodal">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content p-3" style="width: 420px !important;">

                <div class="modal-body">
                    <div class="d-flex justify-content-center"><img src="~/images/warning.png" alt="" width="40"></div>
                    <div class="d-flex justify-content-center mt-3">Are You Sure You Want To Delete this Category?</div>
                </div>
                <div class="d-flex justify-content-center align-items-center gap-2">
                    <a id="deleteCategoryBtn">
                        <button type="button" class="btn btn-primary px-4">Yes</button>
                    </a>
                    <button type="button" class="btn btn-secondary px-3" data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    @* -------------------------------------------------------------- *@


    @* edit category modal *@

     <div class="modal fade" id="editcategory" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">edit Category</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="Menu" asp-controller="Menu" method="post">
                    <div class="modal-body">
                        <div class="d-flex flex-column">
                            <input type="text" id="editid" name="Id" hidden>

                            <div class="mb-3">

                                <input type="text" class="form-control p-3" id="editformname" name="Name"
                                    placeholder="Name">
                            </div>
                            <div class="mb-3">

                                <textarea class="form-control" id="editformdescription" rows="3"
                                    placeholder="Description" name="Description"></textarea>
                            </div>
                        </div>
                         <div class="d-flex justify-content-end gap-2 p-2">
                        <button type="submit" class="btn custom-btn-bg text-white fw-medium" id="editmodalbtn">Edit</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                       
                </form>
            </div>
        </div>
    </div>
</div>


<script>
 var categoryoption = document.querySelectorAll(".category-option");

    categoryoption.forEach(opt => {
        opt.addEventListener("mouseover", function() {
            var actionbtn = opt.querySelector("#categoryoption_actionbtn");
            
            actionbtn.classList.remove("d-none");
            actionbtn.classList.add("d-block");
        });
        opt.addEventListener("mouseleave", function() {
            var actionbtn = opt.querySelector("#categoryoption_actionbtn");
            actionbtn.classList.remove("d-block");
            actionbtn.classList.add("d-none");
        });
    });

    function setEditData(element){
    

        var userId = element.getAttribute("data-id");
        var name =  element.getAttribute("data-name")
        var description = element.getAttribute("data-description");
        var editBtn = document.getElementById("editmodalbtn");
        document.getElementById("editid").value=userId;
        document.getElementById("editformname").value=name;
        document.getElementById("editformdescription").value=description;
        @* editBtn.href = '@Url.Action("Menu", "Menu")' + '?id=' + userId; *@
    }

    function setDeleteUserId(element) {
        var Id = element.getAttribute("data-id");
        var deleteBtn = document.getElementById("deleteCategoryBtn");
        deleteBtn.href = '@Url.Action("DeleteCategory", "Menu")' + '?id=' + Id;
    }

    function loaditems(ele)
    {
        var name = ele.getAttribute("category-name");
        window.location.href="/Menu/Menu?cat="+name;
    }

    document.addEventListener("DOMContentLoaded", () => {
        const categories = document.querySelectorAll(".category-option");
        const categoriesforsmall = document.querySelectorAll(".category-option-smallscreen");

        if (categories.length > 0) {
            // Select the first category by default
            @* categories[0].classList.add("category-active-option");
            categoriesforsmall[0].classList.add("category-active-option"); *@
        }

        categories.forEach(category => {
            category.addEventListener("click", () => {
                // Remove the active class from all categories
                categories.forEach(cat => cat.classList.remove("category-active-option"));

                // Add active class to the clicked category
                category.classList.add("category-active-option");
            });
        });
        categoriesforsmall.forEach(category => {
            category.addEventListener("click", () => {
                // Remove the active class from all categories
                categoriesforsmall.forEach(cat => cat.classList.remove("category-active-option"));

                // Add active class to the clicked category
                category.classList.add("category-active-option");
            });
        });
    });

     function changePageSize() {
        var pageSize = document.getElementById("pageSizeDropdown").value;
        var currentPage = @Model.Itemsmodel.CurrentPage;
        window.location.href = '@Url.Action("Menu", "Menu")' + '?pageNumber=' + currentPage + '&pageSize=' + pageSize + '&searchKeyword=' + '@Model.Itemsmodel.SearchKeyword';
    }

    function search() {
        var search_keyword = document.getElementById("search-field").value;
        var pageSize = document.getElementById("pageSizeDropdown").value;
        window.location.href = '@Url.Action("Menu", "Menu")' + '?searchKeyword=' + search_keyword + '&pageSize=' + pageSize;
    }

    function setDeleteUserId(element) {
        var userId = element.getAttribute("data-id");
        var deleteBtn = document.getElementById("deleteUserBtn");
        deleteBtn.href = '@Url.Action("DeleteUser", "Menu")' + '?id=' + userId;
    }
    document.getElementById("search-field").addEventListener("keypress", function (event) {
        if (event.key === "Enter") {
            search();
        }
    });
</script>