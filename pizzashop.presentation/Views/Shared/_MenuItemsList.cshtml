@* @model DAL.ViewModels.MenuViewModel; *@
@model DAL.ViewModels.ItemPaginationViewModel

<table class="table">
    <tr>
        <th class="d-flex">
            <div class="form-check">
                <input class="form-check-input outer_checkbox" id="menu-main-checkbox" type="checkbox" value=""
                    id="flexCheckIndeterminate">
            </div> <span>Name</span>
        </th>
        <th>ItemType</th>
        <th>Rate</th>
        <th>Quantity</th>
        <th>Available</th>
        <th>Action</th>
    </tr>


    @foreach (var i in Model.Items)
    {
        <tr>
            <td>
                <div class="d-flex justify-content-start gap-2 align-items-center">
                    <div class="form-check">
                        <input class="form-check-input inner_checkbox" type="checkbox" value="@i.ItemId"
                            id="flexCheckIndeterminate">
                    </div>

                    <img src="@(i.Image != null && !string.IsNullOrEmpty(i.Image) ? i.Image : "/images/dining-menu.png")"
                        class="small-img">
                    <span>@i.ItemName</span>
                </div>
            </td>
            <td>
                @if (i.Type == "Veg")
                {
                    <img src="~/images/icons/veg-icon.svg" alt="" class="small-img ">
                }
                else
                {

                    <img src="~/images/icons/non-veg-icon.svg" alt="" class="small-img ">
                }
            </td>
            <td>@i.Rate</td>
            <td>@i.Quantity</td>
            <td>
                <div class="form-check form-switch">
                    <input class="form-check-input toggle-btn" type="checkbox" role="switch" id="flexSwitchCheckDefault"
                        @(i.Isavailable ? "checked" : "") disabled>
                </div>
            </td>
            <td>
                <div class="d-flex justify-content-start gap-5">
                    <img src="~/images/icons/pen.svg" alt="" data-bs-toggle="modal" data-bs-target="#editmenuitem"
                        item-obj='@Html.Raw(Json.Serialize(i))' onclick="setedititemdata(this)">
                    <img src="~/images/icons/trash.svg" data-bs-toggle="modal" data-bs-target="#exampleModal" alt="">
                </div>

            </td>
        </tr>

    }


</table>
<div class="pagination-section d-flex justify-content-end align-items-center gap-2 overflow-auto w-100">
    <div class="d-flex justify-content-md-end align-items-center gap-2 w-100">
        <div>Items per page: </div>
        <select class="form-select" style="width:68px ;" aria-label="Default select example" id="pageSizeDropdown"
            onchange="changePageSize()">
            <option selected>@Model.PageSize</option>
            <option value="3">3</option>
            <option value="5">5</option>
            <option value="10">10</option>
        </select>
        <div>Showing @Model.StartIndex - @Model.EndIndex of @Model.TotalCount</div>
        @if (Model.CurrentPage > 1)
        {
            <div onclick="handlePrevious()"
                class="text-black" style="text-decoration: none;">
                <div class="border p-2 px-3"> &lt; </div>
            </div>
        }
        @if (Model.CurrentPage < Model.TotalPages)
        {
            <div onclick="handleNext()"
                class="text-black" style="text-decoration: none;">
                <div class="border p-2 px-3">&gt;</div>
            </div>
        }
    </div>
</div>


<script>
    function changePageSize() {

        var pageSize = document.getElementById("pageSizeDropdown").value;
       var currentPage = @Model.CurrentPage;
        var searchKeyword = document.getElementById("search-field").value;
      
        $.ajax({
        type: "GET",
        url: "/Menu/Menu",
        data: {
            pageNumber: currentPage,
            pageSize: pageSize,
            searchKeyword: searchKeyword,
            cat: "@Model.Category"
        },
        success: function (data) {
            $('#menuTableContainer').html(data);
        },
        error: function (xhr, status, error) {
            console.log("Error loading data:", error);
            console.log("Response:", xhr.responseText);
        }
    });
    }

    function handlePrevious()
    {

        @* console.log("cp",currentPage) *@
        var pageSize = document.getElementById("pageSizeDropdown").value;
        var currentPage = @Model.CurrentPage-1;
        var searchKeyword = document.getElementById("search-field").value;

        $.ajax({
        type: "GET",
        url: "/Menu/Menu",
        data: {
            pageNumber: currentPage,
            pageSize: pageSize,
            searchKeyword: searchKeyword,
            cat: "@Model.Category"
        },
        success: function (data) {
            $('#menuTableContainer').html(data);
        },
        error: function (xhr, status, error) {
            console.log("Error loading data:", error);
            console.log("Response:", xhr.responseText);
        }
    });
    }
    function handleNext()
    {
        var pageSize = document.getElementById("pageSizeDropdown").value;
        var currentPage = @Model.CurrentPage+1;
        var searchKeyword = document.getElementById("search-field").value;

        $.ajax({
        type: "GET",
        url: "/Menu/Menu",
        data: {
            pageNumber: currentPage,
            pageSize: pageSize,
            searchKeyword: searchKeyword,
            cat: "@Model.Category"
        },
        success: function (data) {
            $('#menuTableContainer').html(data);
        },
        error: function (xhr, status, error) {
            console.log("Error loading data:", error);
            console.log("Response:", xhr.responseText);
        }
    });
    }
</script>