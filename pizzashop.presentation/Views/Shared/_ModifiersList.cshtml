@model DAL.ViewModels.MenuViewModel;

<table class="table">
    <tr>
        <th class="d-flex">
            <div class="form-check">
                <input class="form-check-input outer_checkbox" id="menu-main-checkbox" type="checkbox" value=""
                    id="flexCheckIndeterminate">
            </div> <span>Name</span>
        </th>
        <th>ItemType</th>
        <th>Rate</th>
        <th>Quantity</th>
        <th>Available</th>
        <th>Action</th>
    </tr>


    @foreach (var i in Model.Itemsmodel.Items)
    {

        <tr>
            <td>
                <div class="d-flex justify-content-start gap-2 align-items-center">
                    <div class="form-check">
                        <input class="form-check-input inner_checkbox" type="checkbox" value="@i.ItemId"
                            id="flexCheckIndeterminate">
                    </div>

                    <img src="@(i.Image != null && !string.IsNullOrEmpty(i.Image) ? i.Image : "/images/dining-menu.png")"
                        class="small-img">
                    <span>@i.ItemName</span>
                </div>
            </td>
            <td>
                @if (i.Type == "Veg")
                {
                    <img src="~/images/icons/veg-icon.svg" alt="" class="small-img ">
                }
                else
                {

                    <img src="~/images/icons/non-veg-icon.svg" alt="" class="small-img ">
                }
            </td>
            <td>@i.Rate</td>
            <td>@i.Quantity</td>
            <td>
                <div class="form-check form-switch">
                    <input class="form-check-input toggle-btn" type="checkbox" role="switch" id="flexSwitchCheckDefault"
                        @(i.Isavailable ? "checked" : "") disabled>
                </div>
            </td>
            <td>
                <div class="d-flex justify-content-start gap-5">
                    <img src="~/images/icons/pen.svg" alt="" data-bs-toggle="modal" data-bs-target="#editmenuitem"
                        item-obj='@Html.Raw(Json.Serialize(i))' onclick="setedititemdata(this)">
                    <img src="~/images/icons/trash.svg" data-bs-toggle="modal" data-bs-target="#exampleModal" alt="">
                </div>

            </td>
        </tr>

    }


</table>
<div class="pagination-section d-flex justify-content-end align-items-center gap-2 overflow-auto w-100">
    <div class="d-flex justify-content-md-end align-items-center gap-2 w-100">
        <div>Items per page: </div>
        <select class="form-select" style="width:68px ;" aria-label="Default select example" id="pageSizeDropdown"
            onchange="changePageSize()">
            <option selected>@Model.Itemsmodel.PageSize</option>
            <option value="3">3</option>
            <option value="5">5</option>
            <option value="10">10</option>
        </select>
        <div>Showing @Model.Itemsmodel.StartIndex - @Model.Itemsmodel.EndIndex of @Model.Itemsmodel.TotalCount</div>
        @if (Model.Itemsmodel.CurrentPage > 1)
        {
            <div onclick="handlePrevious()"
                class="text-black" style="text-decoration: none;">
                <div class="border p-2 px-3"> &lt; </div>
            </div>
        }
        @if (Model.Itemsmodel.CurrentPage < Model.Itemsmodel.TotalPages)
        {
            <div onclick="handleNext()"
                class="text-black" style="text-decoration: none;">
                <div class="border p-2 px-3">&gt;</div>
            </div>
        }
    </div>
</div>