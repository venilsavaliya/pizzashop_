@model DAL.ViewModels.MainTaxViewModel

<div class="d-flex flex-column flex-md-row justify-content-md-between pt-3 px-3 w-100">

    <div>
        <h2 class="custom-blue">Orders</h2>
    </div>

    <div class="d-flex gap-2 flex-wrap w-100 justify-content-md-end">

        <div class="d-none d-md-flex flex-column flex-sm-row gap-2 flex-grow-1">

        </div>
        <!-- Search Bar & Order Status -->
        <div class="d-flex flex-column flex-sm-row gap-2 flex-grow-1">
            <div class="mb-2 position-relative flex-grow-1">
                <input type="text" class="p-2 py-3 w-100 border-0 rounded" placeholder="Search" id="orderitem-search-field">
                <img src="~/images/icons/search.svg" alt="" class="position-absolute" style="right: 18px; top: 18px;">
            </div>

            <div class="mb-2 flex-grow-1">
                <select class="form-select py-3 border-0 w-100" id="OrderStatus">
                    <option value="">All Status</option>
                    <option value="1">Pending</option>
                    <option value="2">Completed</option>
                    <option value="3">Cancelled</option>
                    <option value="4">In Progress</option>
                    <option value="5">Served</option>
                    <option value="6">On Hold</option>
                    <option value="7">Failed</option>
                </select>
            </div>
        </div>

        <!-- Timeframe & Export Button -->
        <div class="d-flex flex-column flex-sm-row gap-2 flex-grow-1">
            <div class="mb-2 flex-grow-1">
                <select class="form-select py-3 border-0 w-100" id="timeframe">
                    <option selected value="">All Time</option>
                    <option value="1">Last 7 Days</option>
                    <option value="2">Last 30 Days</option>
                    <option value="3">Current Month</option>
                </select>
            </div>

 <div class="mb-2 d-flex justify-content-center">
    <div type="button" 
         class="custom-btn-bg text-white px-3 border rounded d-flex align-items-center" 
         id="exportbtn"
         style="width: fit-content; min-width: max-content;">
        <span class="fs-5 fw-semibold m-2">
            <img src="~/images/icons/export.png" alt="" height="25" width="25" style="filter: invert(1);">
        </span>
        <span>Export</span>
    </div>
</div>


        </div>

    </div>

</div>


<div class="d-flex flex-column flex-md-row justify-content-md-end  gap-3  px-3 flex-wrap w-100">

    <!-- Date Filters -->
    <div class="d-flex flex-column flex-sm-row gap-2 flex-grow-1 justify-content-md-end" >
        <div class="form-floating flex-grow-1 " style="max-width: 340px;">
            <input type="date" id="fromDate" class="form-control py-2 w-100">
            <label for="fromDate">From Date</label>
        </div>

        <div class="form-floating flex-grow-1" style="max-width: 340px;">
            <input type="date" id="toDate" class="form-control py-2 w-100">
            <label for="toDate">To Date</label>
        </div>
    </div>

    

    <!-- Buttons -->
    <div class="d-flex gap-2">
        <button class="custom-btn-bg text-white px-4 py-2 border rounded text-center"
            onclick="HandleSearch()">
            Search
        </button>

        <button class="custom-blue-border px-4 py-2 rounded text-center" onclick="ClearFilters()">
            <span class="custom-blue">Clear</span>
        </button>
    </div>

</div>


    <div class="table-section bg-white table-responsive mt-5 ms-2 me-2 px-4 shadow " id="orderlistcontainer">
        @* Tax Table List Partial View *@
    </div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<script
    src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
<script>



    $(document).ready(function () {

        // set min and max for the calender 
        let today = new Date().toISOString().slice(0, 10);
        $("#fromDate").attr("max", today);

        $("#fromDate").on("change", function () {
            let fromdate = $("#fromDate").val();
            $("#toDate").attr("min", fromdate);
        });


        OrderListPaginationAjax();
    })

    function OrderListPaginationAjax(pageSize, pageNumber, sortColumn, sortOrder) {

        console.log("hello")

        let id = $("#section-list .category-active-option").attr("section-id");

        let searchkeyword = $("#orderitem-search-field").val();
        var selectedText = $("#OrderStatus option:selected").text();

        var startDate = $("#fromDate").val();

        var endDate = $("#toDate").val();
        console.log("njdbwej")
        var timeframevalue = $("#timeframe").val();




        if (!startDate && !endDate && timeframevalue) {

            endDate = new Date().toISOString().slice(0, 10);

            startDate = new Date();

            if (timeframevalue == "1") {
                startDate.setDate(startDate.getDate() - 7);
                startDate = startDate.toISOString().slice(0, 10);
            }
            else if (timeframevalue == "2") {
                startDate.setDate(startDate.getDate() - 30);
                startDate = startDate.toISOString().slice(0, 10);
            }
            else if (timeframevalue == "3") {
                let today = new Date();
                startDate = new Date(today.getFullYear(), today.getMonth(), 1);
                console.log("hii1", startDate)
                startDate = startDate.getFullYear() + "-" +
                    String(startDate.getMonth() + 1).padStart(2, '0') + "-" +
                    String(startDate.getDate()).padStart(2, '0');
                console.log("hii", startDate)
            }
        }

        if (selectedText == "All Status") {
            selectedText = "";
        }

        $.ajax({
            url: "/Order/GetOrderList",
            data: { 'pageSize': pageSize, 'pageNumber': pageNumber, 'searchKeyword': searchkeyword, 'sortColumn': sortColumn, 'sortOrder': sortOrder, 'status': selectedText, 'startDate': startDate, 'endDate': endDate },
            type: "GET",
            dataType: "html",
            success: function (data) {
                $("#orderlistcontainer").html(data);
            },
            error: function () {
                $("#orderlistcontainer").html('An error has occurred');
            }
        });
    }

    @* Handle Search  *@

        function HandleSearch() {
            let searchkeyword = $("#orderitem-search-field").val();
            let status = $("#OrderStatus").val();
            console.log(typeof $("#fromDate").val());

            OrderListPaginationAjax();
        }

    @* Clear Field Of All Filters *@

        function ClearFilters() {
            $('#fromDate').val('');
            $('#toDate').val('');
            $('#orderitem-search-field').val('');
            $('#OrderStatus').val('');
            $('#timeframe').val('');

            OrderListPaginationAjax();
        }

    // Handle Export Of Dat in Excel sheet

    $("#exportbtn").on("click", () => {
        let searchkeyword = $("#orderitem-search-field").val();
        var selectedText = $("#OrderStatus option:selected").text();

        var startDate = $("#fromDate").val();

        var endDate = $("#toDate").val();
        console.log("njdbwej")
        var timeframevalue = $("#timeframe").val();
        var timeframetext = $("#timeframe option:selected").text();




        if (!startDate && !endDate && timeframevalue) {

            endDate = new Date().toISOString().slice(0, 10);

            startDate = new Date();

            if (timeframevalue == "1") {
                startDate.setDate(startDate.getDate() - 7);
                startDate = startDate.toISOString().slice(0, 10);
            }
            else if (timeframevalue == "2") {
                startDate.setDate(startDate.getDate() - 30);
                startDate = startDate.toISOString().slice(0, 10);
            }
            else if (timeframevalue == "3") {
                let today = new Date();
                startDate = new Date(today.getFullYear(), today.getMonth(), 1);
                console.log("hii1", startDate)
                startDate = startDate.getFullYear() + "-" +
                    String(startDate.getMonth() + 1).padStart(2, '0') + "-" +
                    String(startDate.getDate()).padStart(2, '0');
                console.log("hii", startDate)
            }
        }

       

        $.ajax({
            url: "/order/ExportOrders",
            type: "GET",
            data: {'searchKeyword': searchkeyword, 'status': selectedText, 'startDate': startDate, 'endDate': endDate,'timeframe':timeframetext },
            xhrFields: {
                responseType: "blob" // Expect a binary file (blob) as the response
            },
            success: function (data) {
                var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" });
                var link = document.createElement("a");
                link.href = window.URL.createObjectURL(blob);
                link.download = "Orders.xlsx";
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            },
            error: function () {
                alert("Error exporting the file.");
            }
        });

    })

    @* set data for edit tax *@

        function setEditTaxData(ele) {

            var c = JSON.parse(ele.getAttribute("item-obj"));
            console.log(c);

            var editsectionitem = document.getElementById("EditTaxmodal");
            editsectionitem.querySelector("#taxIdForEdit").value = c.taxId;
            editsectionitem.querySelector("#taxNameForEdit").value = c.taxName;
            editsectionitem.querySelector("#typeOfTaxForEdit").value = c.type;
            editsectionitem.querySelector("#taxAmountForEdit").value = c.taxAmount;
            editsectionitem.querySelector("#isEnabledForEdit").checked = c.isenable;
            editsectionitem.querySelector("#isDefaultForEdit").checked = c.isdefault;
            editsectionitem.querySelector("#Description").value = c.description;
        }

    @* Delete Tax *@

        function setDeleteTaxData(element) {

            var Id = element.getAttribute("tax-id");
            var deleteBtn = document.getElementById("deleteTaxBtn");
            deleteBtn.href = '@Url.Action("DeleteTax", "Tax")' + '?id=' + Id;

        }
</script>